"""Опис змін

Revision ID: d2ae864a9081
Revises: 
Create Date: 2024-12-10 00:31:17.040901

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd2ae864a9081'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_customers_id', table_name='customers')
    op.execute('DROP TABLE customers CASCADE')
    op.add_column('bookings', sa.Column('client_id', sa.Integer(), nullable=False))
    op.add_column('bookings', sa.Column('date_start', sa.Date(), nullable=False))
    op.add_column('bookings', sa.Column('date_end', sa.Date(), nullable=False))
    op.add_column('bookings', sa.Column('total_price', sa.Float(), nullable=False))
    op.alter_column('bookings', 'room_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    op.create_foreign_key(None, 'bookings', 'clients', ['client_id'], ['id'])
    op.drop_column('bookings', 'customer_id')
    op.drop_column('bookings', 'booking_date')
    op.add_column('hotels', sa.Column('owner_id', sa.Integer(), nullable=False))
    op.alter_column('hotels', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('hotels', 'address',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_index('ix_hotels_name', table_name='hotels')
    op.create_foreign_key(None, 'hotels', 'owners', ['owner_id'], ['id'])
    op.add_column('owners', sa.Column('person_id', sa.Integer(), nullable=False))
    op.drop_constraint('owners_email_key', 'owners', type_='unique')
    op.create_unique_constraint(None, 'owners', ['person_id'])
    op.create_foreign_key(None, 'owners', 'people', ['person_id'], ['id'])
    op.drop_column('owners', 'email')
    op.drop_column('owners', 'phone')
    op.drop_column('owners', 'last_name')
    op.drop_column('owners', 'first_name')
    op.drop_column('people', 'date_of_birth')
    op.add_column('rooms', sa.Column('room_number', sa.String(), nullable=False))
    op.add_column('rooms', sa.Column('places', sa.Integer(), nullable=False))
    op.add_column('rooms', sa.Column('price_per_night', sa.Float(), nullable=False))
    op.alter_column('rooms', 'room_type',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('rooms', 'hotel_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('rooms', 'status')
    op.drop_column('rooms', 'price')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('rooms', sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('rooms', sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.alter_column('rooms', 'hotel_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('rooms', 'room_type',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('rooms', 'price_per_night')
    op.drop_column('rooms', 'places')
    op.drop_column('rooms', 'room_number')
    op.add_column('people', sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=False))
    op.add_column('owners', sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('owners', sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('owners', sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('owners', sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'owners', type_='foreignkey')
    op.drop_constraint(None, 'owners', type_='unique')
    op.create_unique_constraint('owners_email_key', 'owners', ['email'])
    op.drop_column('owners', 'person_id')
    op.drop_constraint(None, 'hotels', type_='foreignkey')
    op.create_index('ix_hotels_name', 'hotels', ['name'], unique=False)
    op.alter_column('hotels', 'address',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('hotels', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('hotels', 'owner_id')
    op.add_column('bookings', sa.Column('booking_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('bookings', sa.Column('customer_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'bookings', type_='foreignkey')
    op.create_foreign_key('bookings_customer_id_fkey', 'bookings', 'customers', ['customer_id'], ['id'])
    op.alter_column('bookings', 'room_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('bookings', 'total_price')
    op.drop_column('bookings', 'date_end')
    op.drop_column('bookings', 'date_start')
    op.drop_column('bookings', 'client_id')
    op.create_table('customers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='customers_pkey')
    )
    op.create_index('ix_customers_id', 'customers', ['id'], unique=False)
    # ### end Alembic commands ###
